/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package parse.weaver.methods

class App {
    static String getCollection(String methodName, String methodSignature) {
        if(methodName.startsWith("batch")) {
            return "\"batch\""
        }
        else if(methodSignature.endsWith("(")) {
            return "\"$methodName\""
        }
        else {
            int lastSpace = methodSignature.lastIndexOf(" ")
            String paramName = methodSignature.substring(lastSpace + 1, methodSignature.length())
            return "${paramName}.tableName()"
        }

    }

    static int readFileLineByLine(String filePath) {
        File file = new File(filePath)
        String line = ""
        int noOfLines = 0;
        file.withReader { reader ->
            while ((line = reader.readLine()) != null) {
                line = line.trim()
                if(line.startsWith("public")) {
                    String returnValue = (line.contains("void") ? "" : "return ") + "Weaver.callOriginal();"
                    int[] indices = line.findIndexValues {it.equals(" ")}
                    String methodName = line.substring(indices[1] + 1, line.indexOf("("))
                    String collection = null;
                    println "@Trace"
                    if(line.lastIndexOf(")") != -1) {
                        String methodSignature = line.substring(0, line.lastIndexOf(")")).trim()
                        print line.substring(0, line.lastIndexOf(")"))
                        println ") {"
                        collection = getCollection(methodName, methodSignature)
                    }
                    else {
                        while(line != null && line.lastIndexOf(")") == -1) {
                            line = line.trim()
                            print line
                            line = reader.readLine()
                        }
                        if(line != null) {
                            String methodSignature = line.substring(0, line.lastIndexOf(")")).trim()
                            print methodSignature
                            println ") {"
                            collection = getCollection(methodName, methodSignature)
                        }
                    }
                    println """DynamoDBMetricUtil.metrics(NewRelic.getAgent().getTracedMethod(), "$methodName", $collection, endpoint);"""
                    println returnValue
                    println "}"
                    println ""
                }
                noOfLines++
            }
        }
        return noOfLines
    }

    static void main(String[] args) {
        println readFileLineByLine("class.txt")
    }
}
